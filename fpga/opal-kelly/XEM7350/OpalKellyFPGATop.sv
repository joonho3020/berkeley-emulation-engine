// Generated by CIRCT firtool-1.62.0
// external module xpm_cdc_handshake

// external module xpm_cdc_handshake

// external module xpm_cdc_single

module DecoupledClockCrossingModule(
  input         clock,
  input         reset,
  input         io_in_clock,
  output        io_in_ready,
  input         io_in_valid,
  input  [15:0] io_in_bits_0,
  input  [15:0] io_in_bits_1,
  input         io_out_ready,
  output        io_out_valid,
  output [15:0] io_out_bits_0,
  output [15:0] io_out_bits_1
);

  wire        _src_rcv_cdc_dest_out;
  wire [31:0] _handshake_cdc_dest_out;
  wire        _handshake_cdc_src_rcv;
  wire        _handshake_cdc_dest_req;
  reg         handshake_done;
  reg         prev_in_valid;
  reg         src_rcv_prev;
  always @(posedge io_in_clock) begin
    if (reset)
      handshake_done <= 1'h0;
    else
      handshake_done <=
        ~(prev_in_valid & ~io_in_valid & handshake_done)
        & (_handshake_cdc_src_rcv | handshake_done);
    prev_in_valid <= io_in_valid;
  end // always @(posedge)
  always @(posedge clock)
    src_rcv_prev <= _src_rcv_cdc_dest_out;
  xpm_cdc_handshake #(
    .DEST_EXT_HSK(1),
    .DEST_SYNC_FF(4),
    .INIT_SYNC_FF(1),
    .SIM_ASSERT_CHK(0),
    .SRC_SYNC_FF(4),
    .WIDTH(32)
  ) handshake_cdc (
    .src_in   ({io_in_bits_1, io_in_bits_0}),
    .src_send (io_in_valid & ~handshake_done),
    .src_clk  (io_in_clock),
    .dest_ack (_handshake_cdc_dest_req),
    .dest_clk (clock),
    .dest_out (_handshake_cdc_dest_out),
    .src_rcv  (_handshake_cdc_src_rcv),
    .dest_req (_handshake_cdc_dest_req)
  );
  xpm_cdc_single #(
    .DEST_SYNC_FF(4),
    .SRC_INPUT_REG(0)
  ) src_rcv_cdc (
    .src_clk  (io_in_clock),
    .src_in   (_handshake_cdc_src_rcv),
    .dest_clk (clock),
    .dest_out (_src_rcv_cdc_dest_out)
  );
  xpm_cdc_single #(
    .DEST_SYNC_FF(4),
    .SRC_INPUT_REG(0)
  ) ready_cdc (
    .src_clk  (clock),
    .src_in   (io_out_ready),
    .dest_clk (io_in_clock),
    .dest_out (io_in_ready)
  );
  assign io_out_valid = ~src_rcv_prev & _src_rcv_cdc_dest_out;
  assign io_out_bits_0 = _handshake_cdc_dest_out[15:0];
  assign io_out_bits_1 = _handshake_cdc_dest_out[31:16];
endmodule

module DecoupledClockCrossingModule_1(
  input         clock,
  input         reset,
  input         io_in_clock,
  output        io_in_ready,
  input         io_in_valid,
  input  [15:0] io_in_bits_0,
  input         io_out_ready,
  output        io_out_valid,
  output [15:0] io_out_bits_0
);

  wire _src_rcv_cdc_dest_out;
  wire _handshake_cdc_src_rcv;
  wire _handshake_cdc_dest_req;
  reg  handshake_done;
  reg  prev_in_valid;
  reg  src_rcv_prev;
  always @(posedge io_in_clock) begin
    if (reset)
      handshake_done <= 1'h0;
    else
      handshake_done <=
        ~(prev_in_valid & ~io_in_valid & handshake_done)
        & (_handshake_cdc_src_rcv | handshake_done);
    prev_in_valid <= io_in_valid;
  end // always @(posedge)
  always @(posedge clock)
    src_rcv_prev <= _src_rcv_cdc_dest_out;
  xpm_cdc_handshake #(
    .DEST_EXT_HSK(1),
    .DEST_SYNC_FF(4),
    .INIT_SYNC_FF(1),
    .SIM_ASSERT_CHK(0),
    .SRC_SYNC_FF(4),
    .WIDTH(16)
  ) handshake_cdc (
    .src_in   (io_in_bits_0),
    .src_send (io_in_valid & ~handshake_done),
    .src_clk  (io_in_clock),
    .dest_ack (_handshake_cdc_dest_req),
    .dest_clk (clock),
    .dest_out (io_out_bits_0),
    .src_rcv  (_handshake_cdc_src_rcv),
    .dest_req (_handshake_cdc_dest_req)
  );
  xpm_cdc_single #(
    .DEST_SYNC_FF(4),
    .SRC_INPUT_REG(0)
  ) src_rcv_cdc (
    .src_clk  (io_in_clock),
    .src_in   (_handshake_cdc_src_rcv),
    .dest_clk (clock),
    .dest_out (_src_rcv_cdc_dest_out)
  );
  xpm_cdc_single #(
    .DEST_SYNC_FF(4),
    .SRC_INPUT_REG(0)
  ) ready_cdc (
    .src_clk  (clock),
    .src_in   (io_out_ready),
    .dest_clk (io_in_clock),
    .dest_out (io_in_ready)
  );
  assign io_out_valid = ~src_rcv_prev & _src_rcv_cdc_dest_out;
endmodule

module OpalKellyClockCrossingModule(
  input         clock,
  input         reset,
  input         io_host_clock,
  input  [15:0] io_host_host_steps,
  input  [2:0]  io_host_used_procs,
  output        io_host_insns_ready,
  input         io_host_insns_valid,
  input  [15:0] io_host_insns_bits_0,
  input  [15:0] io_host_insns_bits_1,
  output        io_host_io_i_ready,
  input         io_host_io_i_valid,
  input  [15:0] io_host_io_i_bits_0,
  input         io_host_io_o_ready,
  output        io_host_io_o_valid,
  output [15:0] io_host_io_o_bits_0,
  output [15:0] io_fpga_host_steps,
  output [2:0]  io_fpga_used_procs,
  input         io_fpga_insns_ready,
  output        io_fpga_insns_valid,
  output [15:0] io_fpga_insns_bits_0,
  output [15:0] io_fpga_insns_bits_1,
  input         io_fpga_io_i_ready,
  output        io_fpga_io_i_valid,
  output [15:0] io_fpga_io_i_bits_0,
  output        io_fpga_io_o_ready,
  input         io_fpga_io_o_valid,
  input  [15:0] io_fpga_io_o_bits_0
);

  wire [15:0] _used_procs_cdc_dest_out;
  wire        _used_procs_cdc_src_rcv;
  wire        _used_procs_cdc_dest_req;
  wire [15:0] _host_steps_cdc_dest_out;
  wire        _host_steps_cdc_src_rcv;
  wire        _host_steps_cdc_dest_req;
  reg         sent_nonzero;
  reg         recv_nonzero;
  reg         sent_nonzero_1;
  reg         recv_nonzero_1;
  always @(posedge io_host_clock) begin
    if (reset) begin
      sent_nonzero <= 1'h0;
      recv_nonzero <= 1'h0;
      sent_nonzero_1 <= 1'h0;
      recv_nonzero_1 <= 1'h0;
    end
    else begin
      sent_nonzero <= (|_host_steps_cdc_dest_out) | sent_nonzero;
      recv_nonzero <= _host_steps_cdc_src_rcv | recv_nonzero;
      sent_nonzero_1 <= (|_used_procs_cdc_dest_out) | sent_nonzero_1;
      recv_nonzero_1 <= _used_procs_cdc_src_rcv | recv_nonzero_1;
    end
  end // always @(posedge)
  xpm_cdc_handshake #(
    .DEST_EXT_HSK(1),
    .DEST_SYNC_FF(4),
    .INIT_SYNC_FF(1),
    .SIM_ASSERT_CHK(0),
    .SRC_SYNC_FF(4),
    .WIDTH(16)
  ) host_steps_cdc (
    .src_in   (io_host_host_steps),
    .src_send (~(sent_nonzero & recv_nonzero) & (|io_host_host_steps)),
    .src_clk  (io_host_clock),
    .dest_ack (_host_steps_cdc_dest_req),
    .dest_clk (clock),
    .dest_out (_host_steps_cdc_dest_out),
    .src_rcv  (_host_steps_cdc_src_rcv),
    .dest_req (_host_steps_cdc_dest_req)
  );
  xpm_cdc_handshake #(
    .DEST_EXT_HSK(1),
    .DEST_SYNC_FF(4),
    .INIT_SYNC_FF(1),
    .SIM_ASSERT_CHK(0),
    .SRC_SYNC_FF(4),
    .WIDTH(16)
  ) used_procs_cdc (
    .src_in   ({13'h0, io_host_used_procs}),
    .src_send (~(sent_nonzero_1 & recv_nonzero_1) & (|io_host_used_procs)),
    .src_clk  (io_host_clock),
    .dest_ack (_used_procs_cdc_dest_req),
    .dest_clk (clock),
    .dest_out (_used_procs_cdc_dest_out),
    .src_rcv  (_used_procs_cdc_src_rcv),
    .dest_req (_used_procs_cdc_dest_req)
  );
  DecoupledClockCrossingModule insns_cdc (
    .clock         (clock),
    .reset         (reset),
    .io_in_clock   (io_host_clock),
    .io_in_ready   (io_host_insns_ready),
    .io_in_valid   (io_host_insns_valid),
    .io_in_bits_0  (io_host_insns_bits_0),
    .io_in_bits_1  (io_host_insns_bits_1),
    .io_out_ready  (io_fpga_insns_ready),
    .io_out_valid  (io_fpga_insns_valid),
    .io_out_bits_0 (io_fpga_insns_bits_0),
    .io_out_bits_1 (io_fpga_insns_bits_1)
  );
  DecoupledClockCrossingModule_1 input_cdc (
    .clock         (clock),
    .reset         (reset),
    .io_in_clock   (io_host_clock),
    .io_in_ready   (io_host_io_i_ready),
    .io_in_valid   (io_host_io_i_valid),
    .io_in_bits_0  (io_host_io_i_bits_0),
    .io_out_ready  (io_fpga_io_i_ready),
    .io_out_valid  (io_fpga_io_i_valid),
    .io_out_bits_0 (io_fpga_io_i_bits_0)
  );
  DecoupledClockCrossingModule_1 output_cdc (
    .clock         (io_host_clock),
    .reset         (reset),
    .io_in_clock   (clock),
    .io_in_ready   (io_fpga_io_o_ready),
    .io_in_valid   (io_fpga_io_o_valid),
    .io_in_bits_0  (io_fpga_io_o_bits_0),
    .io_out_ready  (io_host_io_o_ready),
    .io_out_valid  (io_host_io_o_valid),
    .io_out_bits_0 (io_host_io_o_bits_0)
  );
  assign io_fpga_host_steps = _host_steps_cdc_dest_out;
  assign io_fpga_used_procs = _used_procs_cdc_dest_out[2:0];
endmodule

module InstructionMemory(
  input        clock,
  input  [2:0] io_pc,
  input        io_wen,
  input  [2:0] io_winst_opcode,
  input  [7:0] io_winst_lut,
  input  [2:0] io_winst_ops_0_rs,
  input        io_winst_ops_0_local,
  input  [2:0] io_winst_ops_1_rs,
  input        io_winst_ops_1_local,
  input  [2:0] io_winst_ops_2_rs,
  input        io_winst_ops_2_local,
  input  [2:0] io_winst_sin,
  output [2:0] io_rinst_opcode,
  output [7:0] io_rinst_lut,
  output [2:0] io_rinst_ops_0_rs,
  output       io_rinst_ops_0_local,
  output [2:0] io_rinst_ops_1_rs,
  output       io_rinst_ops_1_local,
  output [2:0] io_rinst_ops_2_rs,
  output       io_rinst_ops_2_local,
  output [2:0] io_rinst_sin
);

  reg  [2:0]      mem_0_opcode;
  reg  [7:0]      mem_0_lut;
  reg  [2:0]      mem_0_ops_0_rs;
  reg             mem_0_ops_0_local;
  reg  [2:0]      mem_0_ops_1_rs;
  reg             mem_0_ops_1_local;
  reg  [2:0]      mem_0_ops_2_rs;
  reg             mem_0_ops_2_local;
  reg  [2:0]      mem_0_sin;
  reg  [2:0]      mem_1_opcode;
  reg  [7:0]      mem_1_lut;
  reg  [2:0]      mem_1_ops_0_rs;
  reg             mem_1_ops_0_local;
  reg  [2:0]      mem_1_ops_1_rs;
  reg             mem_1_ops_1_local;
  reg  [2:0]      mem_1_ops_2_rs;
  reg             mem_1_ops_2_local;
  reg  [2:0]      mem_1_sin;
  reg  [2:0]      mem_2_opcode;
  reg  [7:0]      mem_2_lut;
  reg  [2:0]      mem_2_ops_0_rs;
  reg             mem_2_ops_0_local;
  reg  [2:0]      mem_2_ops_1_rs;
  reg             mem_2_ops_1_local;
  reg  [2:0]      mem_2_ops_2_rs;
  reg             mem_2_ops_2_local;
  reg  [2:0]      mem_2_sin;
  reg  [2:0]      mem_3_opcode;
  reg  [7:0]      mem_3_lut;
  reg  [2:0]      mem_3_ops_0_rs;
  reg             mem_3_ops_0_local;
  reg  [2:0]      mem_3_ops_1_rs;
  reg             mem_3_ops_1_local;
  reg  [2:0]      mem_3_ops_2_rs;
  reg             mem_3_ops_2_local;
  reg  [2:0]      mem_3_sin;
  reg  [2:0]      mem_4_opcode;
  reg  [7:0]      mem_4_lut;
  reg  [2:0]      mem_4_ops_0_rs;
  reg             mem_4_ops_0_local;
  reg  [2:0]      mem_4_ops_1_rs;
  reg             mem_4_ops_1_local;
  reg  [2:0]      mem_4_ops_2_rs;
  reg             mem_4_ops_2_local;
  reg  [2:0]      mem_4_sin;
  reg  [2:0]      mem_5_opcode;
  reg  [7:0]      mem_5_lut;
  reg  [2:0]      mem_5_ops_0_rs;
  reg             mem_5_ops_0_local;
  reg  [2:0]      mem_5_ops_1_rs;
  reg             mem_5_ops_1_local;
  reg  [2:0]      mem_5_ops_2_rs;
  reg             mem_5_ops_2_local;
  reg  [2:0]      mem_5_sin;
  reg  [2:0]      mem_6_opcode;
  reg  [7:0]      mem_6_lut;
  reg  [2:0]      mem_6_ops_0_rs;
  reg             mem_6_ops_0_local;
  reg  [2:0]      mem_6_ops_1_rs;
  reg             mem_6_ops_1_local;
  reg  [2:0]      mem_6_ops_2_rs;
  reg             mem_6_ops_2_local;
  reg  [2:0]      mem_6_sin;
  reg  [2:0]      mem_7_opcode;
  reg  [7:0]      mem_7_lut;
  reg  [2:0]      mem_7_ops_0_rs;
  reg             mem_7_ops_0_local;
  reg  [2:0]      mem_7_ops_1_rs;
  reg             mem_7_ops_1_local;
  reg  [2:0]      mem_7_ops_2_rs;
  reg             mem_7_ops_2_local;
  reg  [2:0]      mem_7_sin;
  wire            _GEN = io_pc == 3'h1;
  wire            _GEN_0 = ~_GEN | io_wen;
  wire [2:0]      _GEN_1 = _GEN_0 ? mem_0_opcode : mem_1_opcode;
  wire [7:0]      _GEN_2 = _GEN_0 ? mem_0_lut : mem_1_lut;
  wire [2:0]      _GEN_3 = _GEN_0 ? mem_0_ops_0_rs : mem_1_ops_0_rs;
  wire            _GEN_4 = _GEN_0 ? mem_0_ops_0_local : mem_1_ops_0_local;
  wire [2:0]      _GEN_5 = _GEN_0 ? mem_0_ops_1_rs : mem_1_ops_1_rs;
  wire            _GEN_6 = _GEN_0 ? mem_0_ops_1_local : mem_1_ops_1_local;
  wire [2:0]      _GEN_7 = _GEN_0 ? mem_0_ops_2_rs : mem_1_ops_2_rs;
  wire            _GEN_8 = _GEN_0 ? mem_0_ops_2_local : mem_1_ops_2_local;
  wire [2:0]      _GEN_9 = _GEN_0 ? mem_0_sin : mem_1_sin;
  wire [7:0][2:0] _GEN_10 =
    {{io_wen ? mem_0_opcode : mem_7_opcode},
     {io_wen ? mem_0_opcode : mem_6_opcode},
     {io_wen ? mem_0_opcode : mem_5_opcode},
     {io_wen ? mem_0_opcode : mem_4_opcode},
     {io_wen ? mem_0_opcode : mem_3_opcode},
     {io_wen ? mem_0_opcode : mem_2_opcode},
     {_GEN_1},
     {_GEN_1}};
  wire [7:0][7:0] _GEN_11 =
    {{io_wen ? mem_0_lut : mem_7_lut},
     {io_wen ? mem_0_lut : mem_6_lut},
     {io_wen ? mem_0_lut : mem_5_lut},
     {io_wen ? mem_0_lut : mem_4_lut},
     {io_wen ? mem_0_lut : mem_3_lut},
     {io_wen ? mem_0_lut : mem_2_lut},
     {_GEN_2},
     {_GEN_2}};
  wire [7:0][2:0] _GEN_12 =
    {{io_wen ? mem_0_ops_0_rs : mem_7_ops_0_rs},
     {io_wen ? mem_0_ops_0_rs : mem_6_ops_0_rs},
     {io_wen ? mem_0_ops_0_rs : mem_5_ops_0_rs},
     {io_wen ? mem_0_ops_0_rs : mem_4_ops_0_rs},
     {io_wen ? mem_0_ops_0_rs : mem_3_ops_0_rs},
     {io_wen ? mem_0_ops_0_rs : mem_2_ops_0_rs},
     {_GEN_3},
     {_GEN_3}};
  wire [7:0]      _GEN_13 =
    {{io_wen ? mem_0_ops_0_local : mem_7_ops_0_local},
     {io_wen ? mem_0_ops_0_local : mem_6_ops_0_local},
     {io_wen ? mem_0_ops_0_local : mem_5_ops_0_local},
     {io_wen ? mem_0_ops_0_local : mem_4_ops_0_local},
     {io_wen ? mem_0_ops_0_local : mem_3_ops_0_local},
     {io_wen ? mem_0_ops_0_local : mem_2_ops_0_local},
     {_GEN_4},
     {_GEN_4}};
  wire [7:0][2:0] _GEN_14 =
    {{io_wen ? mem_0_ops_1_rs : mem_7_ops_1_rs},
     {io_wen ? mem_0_ops_1_rs : mem_6_ops_1_rs},
     {io_wen ? mem_0_ops_1_rs : mem_5_ops_1_rs},
     {io_wen ? mem_0_ops_1_rs : mem_4_ops_1_rs},
     {io_wen ? mem_0_ops_1_rs : mem_3_ops_1_rs},
     {io_wen ? mem_0_ops_1_rs : mem_2_ops_1_rs},
     {_GEN_5},
     {_GEN_5}};
  wire [7:0]      _GEN_15 =
    {{io_wen ? mem_0_ops_1_local : mem_7_ops_1_local},
     {io_wen ? mem_0_ops_1_local : mem_6_ops_1_local},
     {io_wen ? mem_0_ops_1_local : mem_5_ops_1_local},
     {io_wen ? mem_0_ops_1_local : mem_4_ops_1_local},
     {io_wen ? mem_0_ops_1_local : mem_3_ops_1_local},
     {io_wen ? mem_0_ops_1_local : mem_2_ops_1_local},
     {_GEN_6},
     {_GEN_6}};
  wire [7:0][2:0] _GEN_16 =
    {{io_wen ? mem_0_ops_2_rs : mem_7_ops_2_rs},
     {io_wen ? mem_0_ops_2_rs : mem_6_ops_2_rs},
     {io_wen ? mem_0_ops_2_rs : mem_5_ops_2_rs},
     {io_wen ? mem_0_ops_2_rs : mem_4_ops_2_rs},
     {io_wen ? mem_0_ops_2_rs : mem_3_ops_2_rs},
     {io_wen ? mem_0_ops_2_rs : mem_2_ops_2_rs},
     {_GEN_7},
     {_GEN_7}};
  wire [7:0]      _GEN_17 =
    {{io_wen ? mem_0_ops_2_local : mem_7_ops_2_local},
     {io_wen ? mem_0_ops_2_local : mem_6_ops_2_local},
     {io_wen ? mem_0_ops_2_local : mem_5_ops_2_local},
     {io_wen ? mem_0_ops_2_local : mem_4_ops_2_local},
     {io_wen ? mem_0_ops_2_local : mem_3_ops_2_local},
     {io_wen ? mem_0_ops_2_local : mem_2_ops_2_local},
     {_GEN_8},
     {_GEN_8}};
  wire [7:0][2:0] _GEN_18 =
    {{io_wen ? mem_0_sin : mem_7_sin},
     {io_wen ? mem_0_sin : mem_6_sin},
     {io_wen ? mem_0_sin : mem_5_sin},
     {io_wen ? mem_0_sin : mem_4_sin},
     {io_wen ? mem_0_sin : mem_3_sin},
     {io_wen ? mem_0_sin : mem_2_sin},
     {_GEN_9},
     {_GEN_9}};
  always @(posedge clock) begin
    if (io_pc == 3'h0 & io_wen) begin
      mem_0_opcode <= io_winst_opcode;
      mem_0_lut <= io_winst_lut;
      mem_0_ops_0_rs <= io_winst_ops_0_rs;
      mem_0_ops_0_local <= io_winst_ops_0_local;
      mem_0_ops_1_rs <= io_winst_ops_1_rs;
      mem_0_ops_1_local <= io_winst_ops_1_local;
      mem_0_ops_2_rs <= io_winst_ops_2_rs;
      mem_0_ops_2_local <= io_winst_ops_2_local;
      mem_0_sin <= io_winst_sin;
    end
    if (_GEN & io_wen) begin
      mem_1_opcode <= io_winst_opcode;
      mem_1_lut <= io_winst_lut;
      mem_1_ops_0_rs <= io_winst_ops_0_rs;
      mem_1_ops_0_local <= io_winst_ops_0_local;
      mem_1_ops_1_rs <= io_winst_ops_1_rs;
      mem_1_ops_1_local <= io_winst_ops_1_local;
      mem_1_ops_2_rs <= io_winst_ops_2_rs;
      mem_1_ops_2_local <= io_winst_ops_2_local;
      mem_1_sin <= io_winst_sin;
    end
    if (io_pc == 3'h2 & io_wen) begin
      mem_2_opcode <= io_winst_opcode;
      mem_2_lut <= io_winst_lut;
      mem_2_ops_0_rs <= io_winst_ops_0_rs;
      mem_2_ops_0_local <= io_winst_ops_0_local;
      mem_2_ops_1_rs <= io_winst_ops_1_rs;
      mem_2_ops_1_local <= io_winst_ops_1_local;
      mem_2_ops_2_rs <= io_winst_ops_2_rs;
      mem_2_ops_2_local <= io_winst_ops_2_local;
      mem_2_sin <= io_winst_sin;
    end
    if (io_pc == 3'h3 & io_wen) begin
      mem_3_opcode <= io_winst_opcode;
      mem_3_lut <= io_winst_lut;
      mem_3_ops_0_rs <= io_winst_ops_0_rs;
      mem_3_ops_0_local <= io_winst_ops_0_local;
      mem_3_ops_1_rs <= io_winst_ops_1_rs;
      mem_3_ops_1_local <= io_winst_ops_1_local;
      mem_3_ops_2_rs <= io_winst_ops_2_rs;
      mem_3_ops_2_local <= io_winst_ops_2_local;
      mem_3_sin <= io_winst_sin;
    end
    if (io_pc == 3'h4 & io_wen) begin
      mem_4_opcode <= io_winst_opcode;
      mem_4_lut <= io_winst_lut;
      mem_4_ops_0_rs <= io_winst_ops_0_rs;
      mem_4_ops_0_local <= io_winst_ops_0_local;
      mem_4_ops_1_rs <= io_winst_ops_1_rs;
      mem_4_ops_1_local <= io_winst_ops_1_local;
      mem_4_ops_2_rs <= io_winst_ops_2_rs;
      mem_4_ops_2_local <= io_winst_ops_2_local;
      mem_4_sin <= io_winst_sin;
    end
    if (io_pc == 3'h5 & io_wen) begin
      mem_5_opcode <= io_winst_opcode;
      mem_5_lut <= io_winst_lut;
      mem_5_ops_0_rs <= io_winst_ops_0_rs;
      mem_5_ops_0_local <= io_winst_ops_0_local;
      mem_5_ops_1_rs <= io_winst_ops_1_rs;
      mem_5_ops_1_local <= io_winst_ops_1_local;
      mem_5_ops_2_rs <= io_winst_ops_2_rs;
      mem_5_ops_2_local <= io_winst_ops_2_local;
      mem_5_sin <= io_winst_sin;
    end
    if (io_pc == 3'h6 & io_wen) begin
      mem_6_opcode <= io_winst_opcode;
      mem_6_lut <= io_winst_lut;
      mem_6_ops_0_rs <= io_winst_ops_0_rs;
      mem_6_ops_0_local <= io_winst_ops_0_local;
      mem_6_ops_1_rs <= io_winst_ops_1_rs;
      mem_6_ops_1_local <= io_winst_ops_1_local;
      mem_6_ops_2_rs <= io_winst_ops_2_rs;
      mem_6_ops_2_local <= io_winst_ops_2_local;
      mem_6_sin <= io_winst_sin;
    end
    if ((&io_pc) & io_wen) begin
      mem_7_opcode <= io_winst_opcode;
      mem_7_lut <= io_winst_lut;
      mem_7_ops_0_rs <= io_winst_ops_0_rs;
      mem_7_ops_0_local <= io_winst_ops_0_local;
      mem_7_ops_1_rs <= io_winst_ops_1_rs;
      mem_7_ops_1_local <= io_winst_ops_1_local;
      mem_7_ops_2_rs <= io_winst_ops_2_rs;
      mem_7_ops_2_local <= io_winst_ops_2_local;
      mem_7_sin <= io_winst_sin;
    end
  end // always @(posedge)
  assign io_rinst_opcode = _GEN_10[io_pc];
  assign io_rinst_lut = _GEN_11[io_pc];
  assign io_rinst_ops_0_rs = _GEN_12[io_pc];
  assign io_rinst_ops_0_local = _GEN_13[io_pc];
  assign io_rinst_ops_1_rs = _GEN_14[io_pc];
  assign io_rinst_ops_1_local = _GEN_15[io_pc];
  assign io_rinst_ops_2_rs = _GEN_16[io_pc];
  assign io_rinst_ops_2_local = _GEN_17[io_pc];
  assign io_rinst_sin = _GEN_18[io_pc];
endmodule

module DataMemory(
  input        clock,
  input        reset,
  input  [2:0] io_rd_0_idx,
  output       io_rd_0_bit,
  input  [2:0] io_rd_1_idx,
  output       io_rd_1_bit,
  input  [2:0] io_rd_2_idx,
  output       io_rd_2_bit,
  input  [2:0] io_wr_idx,
  input        io_wr_bit,
  output [7:0] io_dbg
);

  reg        mem_0;
  reg        mem_1;
  reg        mem_2;
  reg        mem_3;
  reg        mem_4;
  reg        mem_5;
  reg        mem_6;
  reg        mem_7;
  wire [7:0] dbg = {mem_7, mem_6, mem_5, mem_4, mem_3, mem_2, mem_1, mem_0};
  wire [7:0] _GEN =
    {{mem_7},
     {mem_6},
     {mem_5},
     {mem_4},
     {mem_3},
     {mem_2},
     {mem_1},
     {io_rd_0_idx == 3'h0 & mem_0}};
  wire [7:0] _GEN_0 =
    {{mem_7},
     {mem_6},
     {mem_5},
     {mem_4},
     {mem_3},
     {mem_2},
     {mem_1},
     {io_rd_1_idx == 3'h0 & mem_0}};
  wire [7:0] _GEN_1 =
    {{mem_7},
     {mem_6},
     {mem_5},
     {mem_4},
     {mem_3},
     {mem_2},
     {mem_1},
     {io_rd_2_idx == 3'h0 & mem_0}};
  always @(posedge clock) begin
    if (reset) begin
      mem_0 <= 1'h0;
      mem_1 <= 1'h0;
      mem_2 <= 1'h0;
      mem_3 <= 1'h0;
      mem_4 <= 1'h0;
      mem_5 <= 1'h0;
      mem_6 <= 1'h0;
      mem_7 <= 1'h0;
    end
    else begin
      if (io_wr_idx == 3'h0)
        mem_0 <= io_wr_bit;
      if (io_wr_idx == 3'h1)
        mem_1 <= io_wr_bit;
      if (io_wr_idx == 3'h2)
        mem_2 <= io_wr_bit;
      if (io_wr_idx == 3'h3)
        mem_3 <= io_wr_bit;
      if (io_wr_idx == 3'h4)
        mem_4 <= io_wr_bit;
      if (io_wr_idx == 3'h5)
        mem_5 <= io_wr_bit;
      if (io_wr_idx == 3'h6)
        mem_6 <= io_wr_bit;
      if (&io_wr_idx)
        mem_7 <= io_wr_bit;
    end
  end // always @(posedge)
  assign io_rd_0_bit = _GEN[io_rd_0_idx];
  assign io_rd_1_bit = _GEN_0[io_rd_1_idx];
  assign io_rd_2_bit = _GEN_1[io_rd_2_idx];
  assign io_dbg = dbg;
endmodule

module Processor(
  input        clock,
  input        reset,
  input        io_run,
  input  [2:0] io_host_steps,
  output       io_init_o,
  output       io_inst_i_ready,
  input        io_inst_i_valid,
  input  [2:0] io_inst_i_bits_opcode,
  input  [7:0] io_inst_i_bits_lut,
  input  [2:0] io_inst_i_bits_ops_0_rs,
  input        io_inst_i_bits_ops_0_local,
  input  [2:0] io_inst_i_bits_ops_1_rs,
  input        io_inst_i_bits_ops_1_local,
  input  [2:0] io_inst_i_bits_ops_2_rs,
  input        io_inst_i_bits_ops_2_local,
  input  [2:0] io_inst_i_bits_sin,
  input        io_init_i,
  input        io_inst_o_ready,
  output       io_inst_o_valid,
  output [2:0] io_inst_o_bits_opcode,
  output [7:0] io_inst_o_bits_lut,
  output [2:0] io_inst_o_bits_ops_0_rs,
  output       io_inst_o_bits_ops_0_local,
  output [2:0] io_inst_o_bits_ops_1_rs,
  output       io_inst_o_bits_ops_1_local,
  output [2:0] io_inst_o_bits_ops_2_rs,
  output       io_inst_o_bits_ops_2_local,
  output [2:0] io_inst_o_bits_sin,
  output [2:0] io_swp_id,
  output       io_swp_o,
  input        io_swp_i,
  input        io_io_i,
  output       io_io_o,
  output [7:0] io_dbg_ldm,
  output [7:0] io_dbg_sdm,
  output       io_dbg_ops_0,
  output       io_dbg_ops_1,
  output       io_dbg_ops_2
);

  wire       _sdm_io_rd_0_bit;
  wire       _sdm_io_rd_1_bit;
  wire       _sdm_io_rd_2_bit;
  wire       _ldm_io_rd_0_bit;
  wire       _ldm_io_rd_1_bit;
  wire       _ldm_io_rd_2_bit;
  wire [2:0] _imem_io_rinst_opcode;
  wire [7:0] _imem_io_rinst_lut;
  wire [2:0] _imem_io_rinst_ops_0_rs;
  wire       _imem_io_rinst_ops_0_local;
  wire [2:0] _imem_io_rinst_ops_1_rs;
  wire       _imem_io_rinst_ops_1_local;
  wire [2:0] _imem_io_rinst_ops_2_rs;
  wire       _imem_io_rinst_ops_2_local;
  reg        io_o;
  reg  [2:0] pc;
  reg        init;
  wire       ops_0 = _imem_io_rinst_ops_0_local ? _ldm_io_rd_0_bit : _sdm_io_rd_0_bit;
  wire       ops_1 = _imem_io_rinst_ops_1_local ? _ldm_io_rd_1_bit : _sdm_io_rd_1_bit;
  wire       ops_2 = _imem_io_rinst_ops_2_local ? _ldm_io_rd_2_bit : _sdm_io_rd_2_bit;
  wire       _GEN = _imem_io_rinst_opcode == 3'h0;
  wire       _GEN_0 = _imem_io_rinst_opcode == 3'h1;
  wire       _GEN_1 = _imem_io_rinst_opcode == 3'h3;
  wire [7:0] _fout_T_1 = _imem_io_rinst_lut >> {5'h0, ops_2, ops_1, ops_0};
  wire       _GEN_2 = _imem_io_rinst_opcode == 3'h2;
  wire       io_swp_o_0 =
    io_run & ~_GEN
    & (_GEN_0
         ? io_io_i
         : _GEN_1
             ? _fout_T_1[0]
             : (_GEN_2 | _imem_io_rinst_opcode == 3'h4 | _imem_io_rinst_opcode == 3'h5)
               & ops_0);
  wire       _GEN_3 = pc == io_host_steps - 3'h1;
  always @(posedge clock) begin
    if (reset) begin
      io_o <= 1'h0;
      pc <= 3'h0;
      init <= 1'h0;
    end
    else begin
      if (_GEN | _GEN_0 | _GEN_1 | ~(_GEN_2 & init)) begin
      end
      else
        io_o <= ops_0;
      if (init) begin
        if (io_run) begin
          if (pc == io_host_steps - 3'h1)
            pc <= 3'h0;
          else
            pc <= pc + 3'h1;
        end
      end
      else if (io_init_i & io_inst_i_valid) begin
        if (_GEN_3)
          pc <= 3'h0;
        else
          pc <= pc + 3'h1;
      end
      init <= ~init & io_init_i & io_inst_i_valid & _GEN_3 | init;
    end
  end // always @(posedge)
  InstructionMemory imem (
    .clock                (clock),
    .io_pc                (pc),
    .io_wen               (~init & io_init_i & io_inst_i_valid),
    .io_winst_opcode      (io_inst_i_bits_opcode),
    .io_winst_lut         (io_inst_i_bits_lut),
    .io_winst_ops_0_rs    (io_inst_i_bits_ops_0_rs),
    .io_winst_ops_0_local (io_inst_i_bits_ops_0_local),
    .io_winst_ops_1_rs    (io_inst_i_bits_ops_1_rs),
    .io_winst_ops_1_local (io_inst_i_bits_ops_1_local),
    .io_winst_ops_2_rs    (io_inst_i_bits_ops_2_rs),
    .io_winst_ops_2_local (io_inst_i_bits_ops_2_local),
    .io_winst_sin         (io_inst_i_bits_sin),
    .io_rinst_opcode      (_imem_io_rinst_opcode),
    .io_rinst_lut         (_imem_io_rinst_lut),
    .io_rinst_ops_0_rs    (_imem_io_rinst_ops_0_rs),
    .io_rinst_ops_0_local (_imem_io_rinst_ops_0_local),
    .io_rinst_ops_1_rs    (_imem_io_rinst_ops_1_rs),
    .io_rinst_ops_1_local (_imem_io_rinst_ops_1_local),
    .io_rinst_ops_2_rs    (_imem_io_rinst_ops_2_rs),
    .io_rinst_ops_2_local (_imem_io_rinst_ops_2_local),
    .io_rinst_sin         (io_swp_id)
  );
  DataMemory ldm (
    .clock       (clock),
    .reset       (reset),
    .io_rd_0_idx (_imem_io_rinst_ops_0_rs),
    .io_rd_0_bit (_ldm_io_rd_0_bit),
    .io_rd_1_idx (_imem_io_rinst_ops_1_rs),
    .io_rd_1_bit (_ldm_io_rd_1_bit),
    .io_rd_2_idx (_imem_io_rinst_ops_2_rs),
    .io_rd_2_bit (_ldm_io_rd_2_bit),
    .io_wr_idx   (pc),
    .io_wr_bit   (io_swp_o_0),
    .io_dbg      (io_dbg_ldm)
  );
  DataMemory sdm (
    .clock       (clock),
    .reset       (reset),
    .io_rd_0_idx (_imem_io_rinst_ops_0_rs),
    .io_rd_0_bit (_sdm_io_rd_0_bit),
    .io_rd_1_idx (_imem_io_rinst_ops_1_rs),
    .io_rd_1_bit (_sdm_io_rd_1_bit),
    .io_rd_2_idx (_imem_io_rinst_ops_2_rs),
    .io_rd_2_bit (_sdm_io_rd_2_bit),
    .io_wr_idx   (pc),
    .io_wr_bit   (io_run & io_swp_i),
    .io_dbg      (io_dbg_sdm)
  );
  assign io_init_o = init;
  assign io_inst_i_ready = ~init & (io_init_i | io_inst_o_ready);
  assign io_inst_o_valid = ~init & ~io_init_i & io_inst_i_valid;
  assign io_inst_o_bits_opcode = io_inst_i_bits_opcode;
  assign io_inst_o_bits_lut = io_inst_i_bits_lut;
  assign io_inst_o_bits_ops_0_rs = io_inst_i_bits_ops_0_rs;
  assign io_inst_o_bits_ops_0_local = io_inst_i_bits_ops_0_local;
  assign io_inst_o_bits_ops_1_rs = io_inst_i_bits_ops_1_rs;
  assign io_inst_o_bits_ops_1_local = io_inst_i_bits_ops_1_local;
  assign io_inst_o_bits_ops_2_rs = io_inst_i_bits_ops_2_rs;
  assign io_inst_o_bits_ops_2_local = io_inst_i_bits_ops_2_local;
  assign io_inst_o_bits_sin = io_inst_i_bits_sin;
  assign io_swp_o = io_swp_o_0;
  assign io_io_o = io_o;
  assign io_dbg_ops_0 = ops_0;
  assign io_dbg_ops_1 = ops_1;
  assign io_dbg_ops_2 = ops_2;
endmodule

module Switch(
  input  [2:0] io_ports_0_id,
  input        io_ports_0_o,
  output       io_ports_0_i,
  input  [2:0] io_ports_1_id,
  input        io_ports_1_o,
  output       io_ports_1_i,
  input  [2:0] io_ports_2_id,
  input        io_ports_2_o,
  output       io_ports_2_i,
  input  [2:0] io_ports_3_id,
  input        io_ports_3_o,
  output       io_ports_3_i,
  input  [2:0] io_ports_4_id,
  input        io_ports_4_o,
  output       io_ports_4_i,
  input  [2:0] io_ports_5_id,
  input        io_ports_5_o,
  output       io_ports_5_i,
  input  [2:0] io_ports_6_id,
  input        io_ports_6_o,
  output       io_ports_6_i,
  input  [2:0] io_ports_7_id,
  input        io_ports_7_o,
  output       io_ports_7_i
);

  wire [7:0] _GEN =
    {{io_ports_7_o},
     {io_ports_6_o},
     {io_ports_5_o},
     {io_ports_4_o},
     {io_ports_3_o},
     {io_ports_2_o},
     {io_ports_1_o},
     {io_ports_0_o}};
  assign io_ports_0_i = _GEN[io_ports_0_id];
  assign io_ports_1_i = _GEN[io_ports_1_id];
  assign io_ports_2_i = _GEN[io_ports_2_id];
  assign io_ports_3_i = _GEN[io_ports_3_id];
  assign io_ports_4_i = _GEN[io_ports_4_id];
  assign io_ports_5_i = _GEN[io_ports_5_id];
  assign io_ports_6_i = _GEN[io_ports_6_id];
  assign io_ports_7_i = _GEN[io_ports_7_id];
endmodule

module Queue1_Instruction(
  input        clock,
  input        reset,
  output       io_enq_ready,
  input        io_enq_valid,
  input  [2:0] io_enq_bits_opcode,
  input  [7:0] io_enq_bits_lut,
  input  [2:0] io_enq_bits_ops_0_rs,
  input        io_enq_bits_ops_0_local,
  input  [2:0] io_enq_bits_ops_1_rs,
  input        io_enq_bits_ops_1_local,
  input  [2:0] io_enq_bits_ops_2_rs,
  input        io_enq_bits_ops_2_local,
  input  [2:0] io_enq_bits_sin,
  input        io_deq_ready,
  output       io_deq_valid,
  output [2:0] io_deq_bits_opcode,
  output [7:0] io_deq_bits_lut,
  output [2:0] io_deq_bits_ops_0_rs,
  output       io_deq_bits_ops_0_local,
  output [2:0] io_deq_bits_ops_1_rs,
  output       io_deq_bits_ops_1_local,
  output [2:0] io_deq_bits_ops_2_rs,
  output       io_deq_bits_ops_2_local,
  output [2:0] io_deq_bits_sin
);

  reg  [25:0] ram;
  reg         full;
  wire        do_enq = ~full & io_enq_valid;
  always @(posedge clock) begin
    if (do_enq)
      ram <=
        {io_enq_bits_sin,
         io_enq_bits_ops_2_local,
         io_enq_bits_ops_2_rs,
         io_enq_bits_ops_1_local,
         io_enq_bits_ops_1_rs,
         io_enq_bits_ops_0_local,
         io_enq_bits_ops_0_rs,
         io_enq_bits_lut,
         io_enq_bits_opcode};
    if (reset)
      full <= 1'h0;
    else if (~(do_enq == (io_deq_ready & full)))
      full <= do_enq;
  end // always @(posedge)
  assign io_enq_ready = ~full;
  assign io_deq_valid = full;
  assign io_deq_bits_opcode = ram[2:0];
  assign io_deq_bits_lut = ram[10:3];
  assign io_deq_bits_ops_0_rs = ram[13:11];
  assign io_deq_bits_ops_0_local = ram[14];
  assign io_deq_bits_ops_1_rs = ram[17:15];
  assign io_deq_bits_ops_1_local = ram[18];
  assign io_deq_bits_ops_2_rs = ram[21:19];
  assign io_deq_bits_ops_2_local = ram[22];
  assign io_deq_bits_sin = ram[25:23];
endmodule

module EmulatorModule(
  input        clock,
  input        reset,
  input  [2:0] io_cfg_in_host_steps,
  input  [2:0] io_cfg_in_used_procs,
  input        io_run,
  output       io_init,
  output       io_inst_ready,
  input        io_inst_valid,
  input  [2:0] io_inst_bits_opcode,
  input  [7:0] io_inst_bits_lut,
  input  [2:0] io_inst_bits_ops_0_rs,
  input        io_inst_bits_ops_0_local,
  input  [2:0] io_inst_bits_ops_1_rs,
  input        io_inst_bits_ops_1_local,
  input  [2:0] io_inst_bits_ops_2_rs,
  input        io_inst_bits_ops_2_local,
  input  [2:0] io_inst_bits_sin,
  input        io_i_bits_0,
  input        io_i_bits_1,
  input        io_i_bits_2,
  input        io_i_bits_3,
  input        io_i_bits_4,
  input        io_i_bits_5,
  input        io_i_bits_6,
  input        io_i_bits_7,
  output       io_o_bits_0,
  output       io_o_bits_1,
  output       io_o_bits_2,
  output       io_o_bits_3,
  output       io_o_bits_4,
  output       io_o_bits_5,
  output       io_o_bits_6,
  output       io_o_bits_7,
  output [7:0] io_dbg_0_ldm,
  output [7:0] io_dbg_0_sdm,
  output       io_dbg_0_ops_0,
  output       io_dbg_0_ops_1,
  output       io_dbg_0_ops_2,
  output [7:0] io_dbg_1_ldm,
  output [7:0] io_dbg_1_sdm,
  output       io_dbg_1_ops_0,
  output       io_dbg_1_ops_1,
  output       io_dbg_1_ops_2,
  output [7:0] io_dbg_2_ldm,
  output [7:0] io_dbg_2_sdm,
  output       io_dbg_2_ops_0,
  output       io_dbg_2_ops_1,
  output       io_dbg_2_ops_2,
  output [7:0] io_dbg_3_ldm,
  output [7:0] io_dbg_3_sdm,
  output       io_dbg_3_ops_0,
  output       io_dbg_3_ops_1,
  output       io_dbg_3_ops_2,
  output [7:0] io_dbg_4_ldm,
  output [7:0] io_dbg_4_sdm,
  output       io_dbg_4_ops_0,
  output       io_dbg_4_ops_1,
  output       io_dbg_4_ops_2,
  output [7:0] io_dbg_5_ldm,
  output [7:0] io_dbg_5_sdm,
  output       io_dbg_5_ops_0,
  output       io_dbg_5_ops_1,
  output       io_dbg_5_ops_2,
  output [7:0] io_dbg_6_ldm,
  output [7:0] io_dbg_6_sdm,
  output       io_dbg_6_ops_0,
  output       io_dbg_6_ops_1,
  output       io_dbg_6_ops_2,
  output [7:0] io_dbg_7_ldm,
  output [7:0] io_dbg_7_sdm,
  output       io_dbg_7_ops_0,
  output       io_dbg_7_ops_1,
  output       io_dbg_7_ops_2
);

  wire       _q_io_enq_ready;
  wire       _q_io_deq_valid;
  wire [2:0] _q_io_deq_bits_opcode;
  wire [7:0] _q_io_deq_bits_lut;
  wire [2:0] _q_io_deq_bits_ops_0_rs;
  wire       _q_io_deq_bits_ops_0_local;
  wire [2:0] _q_io_deq_bits_ops_1_rs;
  wire       _q_io_deq_bits_ops_1_local;
  wire [2:0] _q_io_deq_bits_ops_2_rs;
  wire       _q_io_deq_bits_ops_2_local;
  wire [2:0] _q_io_deq_bits_sin;
  wire       _switch_io_ports_0_i;
  wire       _switch_io_ports_1_i;
  wire       _switch_io_ports_2_i;
  wire       _switch_io_ports_3_i;
  wire       _switch_io_ports_4_i;
  wire       _switch_io_ports_5_i;
  wire       _switch_io_ports_6_i;
  wire       _switch_io_ports_7_i;
  wire       _procs_7_io_inst_o_valid;
  wire [2:0] _procs_7_io_inst_o_bits_opcode;
  wire [7:0] _procs_7_io_inst_o_bits_lut;
  wire [2:0] _procs_7_io_inst_o_bits_ops_0_rs;
  wire       _procs_7_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_7_io_inst_o_bits_ops_1_rs;
  wire       _procs_7_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_7_io_inst_o_bits_ops_2_rs;
  wire       _procs_7_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_7_io_inst_o_bits_sin;
  wire [2:0] _procs_7_io_swp_id;
  wire       _procs_7_io_swp_o;
  wire       _procs_6_io_init_o;
  wire       _procs_6_io_inst_i_ready;
  wire       _procs_6_io_inst_o_valid;
  wire [2:0] _procs_6_io_inst_o_bits_opcode;
  wire [7:0] _procs_6_io_inst_o_bits_lut;
  wire [2:0] _procs_6_io_inst_o_bits_ops_0_rs;
  wire       _procs_6_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_6_io_inst_o_bits_ops_1_rs;
  wire       _procs_6_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_6_io_inst_o_bits_ops_2_rs;
  wire       _procs_6_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_6_io_inst_o_bits_sin;
  wire [2:0] _procs_6_io_swp_id;
  wire       _procs_6_io_swp_o;
  wire       _procs_5_io_init_o;
  wire       _procs_5_io_inst_i_ready;
  wire       _procs_5_io_inst_o_valid;
  wire [2:0] _procs_5_io_inst_o_bits_opcode;
  wire [7:0] _procs_5_io_inst_o_bits_lut;
  wire [2:0] _procs_5_io_inst_o_bits_ops_0_rs;
  wire       _procs_5_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_5_io_inst_o_bits_ops_1_rs;
  wire       _procs_5_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_5_io_inst_o_bits_ops_2_rs;
  wire       _procs_5_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_5_io_inst_o_bits_sin;
  wire [2:0] _procs_5_io_swp_id;
  wire       _procs_5_io_swp_o;
  wire       _procs_4_io_init_o;
  wire       _procs_4_io_inst_i_ready;
  wire       _procs_4_io_inst_o_valid;
  wire [2:0] _procs_4_io_inst_o_bits_opcode;
  wire [7:0] _procs_4_io_inst_o_bits_lut;
  wire [2:0] _procs_4_io_inst_o_bits_ops_0_rs;
  wire       _procs_4_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_4_io_inst_o_bits_ops_1_rs;
  wire       _procs_4_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_4_io_inst_o_bits_ops_2_rs;
  wire       _procs_4_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_4_io_inst_o_bits_sin;
  wire [2:0] _procs_4_io_swp_id;
  wire       _procs_4_io_swp_o;
  wire       _procs_3_io_init_o;
  wire       _procs_3_io_inst_i_ready;
  wire       _procs_3_io_inst_o_valid;
  wire [2:0] _procs_3_io_inst_o_bits_opcode;
  wire [7:0] _procs_3_io_inst_o_bits_lut;
  wire [2:0] _procs_3_io_inst_o_bits_ops_0_rs;
  wire       _procs_3_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_3_io_inst_o_bits_ops_1_rs;
  wire       _procs_3_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_3_io_inst_o_bits_ops_2_rs;
  wire       _procs_3_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_3_io_inst_o_bits_sin;
  wire [2:0] _procs_3_io_swp_id;
  wire       _procs_3_io_swp_o;
  wire       _procs_2_io_init_o;
  wire       _procs_2_io_inst_i_ready;
  wire       _procs_2_io_inst_o_valid;
  wire [2:0] _procs_2_io_inst_o_bits_opcode;
  wire [7:0] _procs_2_io_inst_o_bits_lut;
  wire [2:0] _procs_2_io_inst_o_bits_ops_0_rs;
  wire       _procs_2_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_2_io_inst_o_bits_ops_1_rs;
  wire       _procs_2_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_2_io_inst_o_bits_ops_2_rs;
  wire       _procs_2_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_2_io_inst_o_bits_sin;
  wire [2:0] _procs_2_io_swp_id;
  wire       _procs_2_io_swp_o;
  wire       _procs_1_io_init_o;
  wire       _procs_1_io_inst_i_ready;
  wire       _procs_1_io_inst_o_valid;
  wire [2:0] _procs_1_io_inst_o_bits_opcode;
  wire [7:0] _procs_1_io_inst_o_bits_lut;
  wire [2:0] _procs_1_io_inst_o_bits_ops_0_rs;
  wire       _procs_1_io_inst_o_bits_ops_0_local;
  wire [2:0] _procs_1_io_inst_o_bits_ops_1_rs;
  wire       _procs_1_io_inst_o_bits_ops_1_local;
  wire [2:0] _procs_1_io_inst_o_bits_ops_2_rs;
  wire       _procs_1_io_inst_o_bits_ops_2_local;
  wire [2:0] _procs_1_io_inst_o_bits_sin;
  wire [2:0] _procs_1_io_swp_id;
  wire       _procs_1_io_swp_o;
  wire       _procs_0_io_init_o;
  wire       _procs_0_io_inst_i_ready;
  wire [2:0] _procs_0_io_swp_id;
  wire       _procs_0_io_swp_o;
  Processor procs_0 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_0_io_init_o),
    .io_inst_i_ready            (_procs_0_io_inst_i_ready),
    .io_inst_i_valid            (_procs_1_io_inst_o_valid),
    .io_inst_i_bits_opcode      (_procs_1_io_inst_o_bits_opcode),
    .io_inst_i_bits_lut         (_procs_1_io_inst_o_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_procs_1_io_inst_o_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_procs_1_io_inst_o_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_procs_1_io_inst_o_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_procs_1_io_inst_o_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_procs_1_io_inst_o_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_procs_1_io_inst_o_bits_ops_2_local),
    .io_inst_i_bits_sin         (_procs_1_io_inst_o_bits_sin),
    .io_init_i                  (1'h1),
    .io_inst_o_ready            (1'h0),
    .io_inst_o_valid            (/* unused */),
    .io_inst_o_bits_opcode      (/* unused */),
    .io_inst_o_bits_lut         (/* unused */),
    .io_inst_o_bits_ops_0_rs    (/* unused */),
    .io_inst_o_bits_ops_0_local (/* unused */),
    .io_inst_o_bits_ops_1_rs    (/* unused */),
    .io_inst_o_bits_ops_1_local (/* unused */),
    .io_inst_o_bits_ops_2_rs    (/* unused */),
    .io_inst_o_bits_ops_2_local (/* unused */),
    .io_inst_o_bits_sin         (/* unused */),
    .io_swp_id                  (_procs_0_io_swp_id),
    .io_swp_o                   (_procs_0_io_swp_o),
    .io_swp_i                   (_switch_io_ports_0_i),
    .io_io_i                    (io_i_bits_0),
    .io_io_o                    (io_o_bits_0),
    .io_dbg_ldm                 (io_dbg_0_ldm),
    .io_dbg_sdm                 (io_dbg_0_sdm),
    .io_dbg_ops_0               (io_dbg_0_ops_0),
    .io_dbg_ops_1               (io_dbg_0_ops_1),
    .io_dbg_ops_2               (io_dbg_0_ops_2)
  );
  Processor procs_1 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_1_io_init_o),
    .io_inst_i_ready            (_procs_1_io_inst_i_ready),
    .io_inst_i_valid            (_procs_2_io_inst_o_valid),
    .io_inst_i_bits_opcode      (_procs_2_io_inst_o_bits_opcode),
    .io_inst_i_bits_lut         (_procs_2_io_inst_o_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_procs_2_io_inst_o_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_procs_2_io_inst_o_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_procs_2_io_inst_o_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_procs_2_io_inst_o_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_procs_2_io_inst_o_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_procs_2_io_inst_o_bits_ops_2_local),
    .io_inst_i_bits_sin         (_procs_2_io_inst_o_bits_sin),
    .io_init_i                  (_procs_0_io_init_o),
    .io_inst_o_ready            (_procs_0_io_inst_i_ready),
    .io_inst_o_valid            (_procs_1_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_1_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_1_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_1_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_1_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_1_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_1_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_1_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_1_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_1_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_1_io_swp_id),
    .io_swp_o                   (_procs_1_io_swp_o),
    .io_swp_i                   (_switch_io_ports_1_i),
    .io_io_i                    (io_i_bits_1),
    .io_io_o                    (io_o_bits_1),
    .io_dbg_ldm                 (io_dbg_1_ldm),
    .io_dbg_sdm                 (io_dbg_1_sdm),
    .io_dbg_ops_0               (io_dbg_1_ops_0),
    .io_dbg_ops_1               (io_dbg_1_ops_1),
    .io_dbg_ops_2               (io_dbg_1_ops_2)
  );
  Processor procs_2 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_2_io_init_o),
    .io_inst_i_ready            (_procs_2_io_inst_i_ready),
    .io_inst_i_valid            (_procs_3_io_inst_o_valid),
    .io_inst_i_bits_opcode      (_procs_3_io_inst_o_bits_opcode),
    .io_inst_i_bits_lut         (_procs_3_io_inst_o_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_procs_3_io_inst_o_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_procs_3_io_inst_o_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_procs_3_io_inst_o_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_procs_3_io_inst_o_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_procs_3_io_inst_o_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_procs_3_io_inst_o_bits_ops_2_local),
    .io_inst_i_bits_sin         (_procs_3_io_inst_o_bits_sin),
    .io_init_i                  (_procs_1_io_init_o),
    .io_inst_o_ready            (_procs_1_io_inst_i_ready),
    .io_inst_o_valid            (_procs_2_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_2_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_2_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_2_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_2_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_2_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_2_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_2_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_2_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_2_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_2_io_swp_id),
    .io_swp_o                   (_procs_2_io_swp_o),
    .io_swp_i                   (_switch_io_ports_2_i),
    .io_io_i                    (io_i_bits_2),
    .io_io_o                    (io_o_bits_2),
    .io_dbg_ldm                 (io_dbg_2_ldm),
    .io_dbg_sdm                 (io_dbg_2_sdm),
    .io_dbg_ops_0               (io_dbg_2_ops_0),
    .io_dbg_ops_1               (io_dbg_2_ops_1),
    .io_dbg_ops_2               (io_dbg_2_ops_2)
  );
  Processor procs_3 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_3_io_init_o),
    .io_inst_i_ready            (_procs_3_io_inst_i_ready),
    .io_inst_i_valid            (_q_io_deq_valid),
    .io_inst_i_bits_opcode      (_q_io_deq_bits_opcode),
    .io_inst_i_bits_lut         (_q_io_deq_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_q_io_deq_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_q_io_deq_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_q_io_deq_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_q_io_deq_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_q_io_deq_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_q_io_deq_bits_ops_2_local),
    .io_inst_i_bits_sin         (_q_io_deq_bits_sin),
    .io_init_i                  (_procs_2_io_init_o),
    .io_inst_o_ready            (_procs_2_io_inst_i_ready),
    .io_inst_o_valid            (_procs_3_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_3_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_3_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_3_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_3_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_3_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_3_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_3_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_3_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_3_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_3_io_swp_id),
    .io_swp_o                   (_procs_3_io_swp_o),
    .io_swp_i                   (_switch_io_ports_3_i),
    .io_io_i                    (io_i_bits_3),
    .io_io_o                    (io_o_bits_3),
    .io_dbg_ldm                 (io_dbg_3_ldm),
    .io_dbg_sdm                 (io_dbg_3_sdm),
    .io_dbg_ops_0               (io_dbg_3_ops_0),
    .io_dbg_ops_1               (io_dbg_3_ops_1),
    .io_dbg_ops_2               (io_dbg_3_ops_2)
  );
  Processor procs_4 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_4_io_init_o),
    .io_inst_i_ready            (_procs_4_io_inst_i_ready),
    .io_inst_i_valid            (_procs_5_io_inst_o_valid),
    .io_inst_i_bits_opcode      (_procs_5_io_inst_o_bits_opcode),
    .io_inst_i_bits_lut         (_procs_5_io_inst_o_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_procs_5_io_inst_o_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_procs_5_io_inst_o_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_procs_5_io_inst_o_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_procs_5_io_inst_o_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_procs_5_io_inst_o_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_procs_5_io_inst_o_bits_ops_2_local),
    .io_inst_i_bits_sin         (_procs_5_io_inst_o_bits_sin),
    .io_init_i                  (_procs_3_io_init_o),
    .io_inst_o_ready            (_q_io_enq_ready),
    .io_inst_o_valid            (_procs_4_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_4_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_4_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_4_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_4_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_4_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_4_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_4_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_4_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_4_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_4_io_swp_id),
    .io_swp_o                   (_procs_4_io_swp_o),
    .io_swp_i                   (_switch_io_ports_4_i),
    .io_io_i                    (io_i_bits_4),
    .io_io_o                    (io_o_bits_4),
    .io_dbg_ldm                 (io_dbg_4_ldm),
    .io_dbg_sdm                 (io_dbg_4_sdm),
    .io_dbg_ops_0               (io_dbg_4_ops_0),
    .io_dbg_ops_1               (io_dbg_4_ops_1),
    .io_dbg_ops_2               (io_dbg_4_ops_2)
  );
  Processor procs_5 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_5_io_init_o),
    .io_inst_i_ready            (_procs_5_io_inst_i_ready),
    .io_inst_i_valid            (_procs_6_io_inst_o_valid),
    .io_inst_i_bits_opcode      (_procs_6_io_inst_o_bits_opcode),
    .io_inst_i_bits_lut         (_procs_6_io_inst_o_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_procs_6_io_inst_o_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_procs_6_io_inst_o_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_procs_6_io_inst_o_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_procs_6_io_inst_o_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_procs_6_io_inst_o_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_procs_6_io_inst_o_bits_ops_2_local),
    .io_inst_i_bits_sin         (_procs_6_io_inst_o_bits_sin),
    .io_init_i                  (_procs_4_io_init_o),
    .io_inst_o_ready            (_procs_4_io_inst_i_ready),
    .io_inst_o_valid            (_procs_5_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_5_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_5_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_5_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_5_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_5_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_5_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_5_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_5_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_5_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_5_io_swp_id),
    .io_swp_o                   (_procs_5_io_swp_o),
    .io_swp_i                   (_switch_io_ports_5_i),
    .io_io_i                    (io_i_bits_5),
    .io_io_o                    (io_o_bits_5),
    .io_dbg_ldm                 (io_dbg_5_ldm),
    .io_dbg_sdm                 (io_dbg_5_sdm),
    .io_dbg_ops_0               (io_dbg_5_ops_0),
    .io_dbg_ops_1               (io_dbg_5_ops_1),
    .io_dbg_ops_2               (io_dbg_5_ops_2)
  );
  Processor procs_6 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (_procs_6_io_init_o),
    .io_inst_i_ready            (_procs_6_io_inst_i_ready),
    .io_inst_i_valid            (_procs_7_io_inst_o_valid),
    .io_inst_i_bits_opcode      (_procs_7_io_inst_o_bits_opcode),
    .io_inst_i_bits_lut         (_procs_7_io_inst_o_bits_lut),
    .io_inst_i_bits_ops_0_rs    (_procs_7_io_inst_o_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (_procs_7_io_inst_o_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (_procs_7_io_inst_o_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (_procs_7_io_inst_o_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (_procs_7_io_inst_o_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (_procs_7_io_inst_o_bits_ops_2_local),
    .io_inst_i_bits_sin         (_procs_7_io_inst_o_bits_sin),
    .io_init_i                  (_procs_5_io_init_o),
    .io_inst_o_ready            (_procs_5_io_inst_i_ready),
    .io_inst_o_valid            (_procs_6_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_6_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_6_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_6_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_6_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_6_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_6_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_6_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_6_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_6_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_6_io_swp_id),
    .io_swp_o                   (_procs_6_io_swp_o),
    .io_swp_i                   (_switch_io_ports_6_i),
    .io_io_i                    (io_i_bits_6),
    .io_io_o                    (io_o_bits_6),
    .io_dbg_ldm                 (io_dbg_6_ldm),
    .io_dbg_sdm                 (io_dbg_6_sdm),
    .io_dbg_ops_0               (io_dbg_6_ops_0),
    .io_dbg_ops_1               (io_dbg_6_ops_1),
    .io_dbg_ops_2               (io_dbg_6_ops_2)
  );
  Processor procs_7 (
    .clock                      (clock),
    .reset                      (reset),
    .io_run                     (io_run),
    .io_host_steps              (io_cfg_in_host_steps),
    .io_init_o                  (/* unused */),
    .io_inst_i_ready            (io_inst_ready),
    .io_inst_i_valid            (io_inst_valid),
    .io_inst_i_bits_opcode      (io_inst_bits_opcode),
    .io_inst_i_bits_lut         (io_inst_bits_lut),
    .io_inst_i_bits_ops_0_rs    (io_inst_bits_ops_0_rs),
    .io_inst_i_bits_ops_0_local (io_inst_bits_ops_0_local),
    .io_inst_i_bits_ops_1_rs    (io_inst_bits_ops_1_rs),
    .io_inst_i_bits_ops_1_local (io_inst_bits_ops_1_local),
    .io_inst_i_bits_ops_2_rs    (io_inst_bits_ops_2_rs),
    .io_inst_i_bits_ops_2_local (io_inst_bits_ops_2_local),
    .io_inst_i_bits_sin         (io_inst_bits_sin),
    .io_init_i                  (_procs_6_io_init_o),
    .io_inst_o_ready            (_procs_6_io_inst_i_ready),
    .io_inst_o_valid            (_procs_7_io_inst_o_valid),
    .io_inst_o_bits_opcode      (_procs_7_io_inst_o_bits_opcode),
    .io_inst_o_bits_lut         (_procs_7_io_inst_o_bits_lut),
    .io_inst_o_bits_ops_0_rs    (_procs_7_io_inst_o_bits_ops_0_rs),
    .io_inst_o_bits_ops_0_local (_procs_7_io_inst_o_bits_ops_0_local),
    .io_inst_o_bits_ops_1_rs    (_procs_7_io_inst_o_bits_ops_1_rs),
    .io_inst_o_bits_ops_1_local (_procs_7_io_inst_o_bits_ops_1_local),
    .io_inst_o_bits_ops_2_rs    (_procs_7_io_inst_o_bits_ops_2_rs),
    .io_inst_o_bits_ops_2_local (_procs_7_io_inst_o_bits_ops_2_local),
    .io_inst_o_bits_sin         (_procs_7_io_inst_o_bits_sin),
    .io_swp_id                  (_procs_7_io_swp_id),
    .io_swp_o                   (_procs_7_io_swp_o),
    .io_swp_i                   (_switch_io_ports_7_i),
    .io_io_i                    (io_i_bits_7),
    .io_io_o                    (io_o_bits_7),
    .io_dbg_ldm                 (io_dbg_7_ldm),
    .io_dbg_sdm                 (io_dbg_7_sdm),
    .io_dbg_ops_0               (io_dbg_7_ops_0),
    .io_dbg_ops_1               (io_dbg_7_ops_1),
    .io_dbg_ops_2               (io_dbg_7_ops_2)
  );
  Switch switch (
    .io_ports_0_id (_procs_0_io_swp_id),
    .io_ports_0_o  (_procs_0_io_swp_o),
    .io_ports_0_i  (_switch_io_ports_0_i),
    .io_ports_1_id (_procs_1_io_swp_id),
    .io_ports_1_o  (_procs_1_io_swp_o),
    .io_ports_1_i  (_switch_io_ports_1_i),
    .io_ports_2_id (_procs_2_io_swp_id),
    .io_ports_2_o  (_procs_2_io_swp_o),
    .io_ports_2_i  (_switch_io_ports_2_i),
    .io_ports_3_id (_procs_3_io_swp_id),
    .io_ports_3_o  (_procs_3_io_swp_o),
    .io_ports_3_i  (_switch_io_ports_3_i),
    .io_ports_4_id (_procs_4_io_swp_id),
    .io_ports_4_o  (_procs_4_io_swp_o),
    .io_ports_4_i  (_switch_io_ports_4_i),
    .io_ports_5_id (_procs_5_io_swp_id),
    .io_ports_5_o  (_procs_5_io_swp_o),
    .io_ports_5_i  (_switch_io_ports_5_i),
    .io_ports_6_id (_procs_6_io_swp_id),
    .io_ports_6_o  (_procs_6_io_swp_o),
    .io_ports_6_i  (_switch_io_ports_6_i),
    .io_ports_7_id (_procs_7_io_swp_id),
    .io_ports_7_o  (_procs_7_io_swp_o),
    .io_ports_7_i  (_switch_io_ports_7_i)
  );
  Queue1_Instruction q (
    .clock                   (clock),
    .reset                   (reset),
    .io_enq_ready            (_q_io_enq_ready),
    .io_enq_valid            (_procs_4_io_inst_o_valid),
    .io_enq_bits_opcode      (_procs_4_io_inst_o_bits_opcode),
    .io_enq_bits_lut         (_procs_4_io_inst_o_bits_lut),
    .io_enq_bits_ops_0_rs    (_procs_4_io_inst_o_bits_ops_0_rs),
    .io_enq_bits_ops_0_local (_procs_4_io_inst_o_bits_ops_0_local),
    .io_enq_bits_ops_1_rs    (_procs_4_io_inst_o_bits_ops_1_rs),
    .io_enq_bits_ops_1_local (_procs_4_io_inst_o_bits_ops_1_local),
    .io_enq_bits_ops_2_rs    (_procs_4_io_inst_o_bits_ops_2_rs),
    .io_enq_bits_ops_2_local (_procs_4_io_inst_o_bits_ops_2_local),
    .io_enq_bits_sin         (_procs_4_io_inst_o_bits_sin),
    .io_deq_ready            (_procs_3_io_inst_i_ready),
    .io_deq_valid            (_q_io_deq_valid),
    .io_deq_bits_opcode      (_q_io_deq_bits_opcode),
    .io_deq_bits_lut         (_q_io_deq_bits_lut),
    .io_deq_bits_ops_0_rs    (_q_io_deq_bits_ops_0_rs),
    .io_deq_bits_ops_0_local (_q_io_deq_bits_ops_0_local),
    .io_deq_bits_ops_1_rs    (_q_io_deq_bits_ops_1_rs),
    .io_deq_bits_ops_1_local (_q_io_deq_bits_ops_1_local),
    .io_deq_bits_ops_2_rs    (_q_io_deq_bits_ops_2_rs),
    .io_deq_bits_ops_2_local (_q_io_deq_bits_ops_2_local),
    .io_deq_bits_sin         (_q_io_deq_bits_sin)
  );
  assign io_init =
    (io_cfg_in_used_procs == 3'h0 | _procs_0_io_init_o)
    & (io_cfg_in_used_procs[2:1] == 2'h0 | _procs_1_io_init_o)
    & (io_cfg_in_used_procs < 3'h3 | _procs_2_io_init_o)
    & (~(io_cfg_in_used_procs[2]) | _procs_3_io_init_o)
    & (io_cfg_in_used_procs < 3'h5 | _procs_4_io_init_o)
    & (io_cfg_in_used_procs[2:1] != 2'h3 | _procs_5_io_init_o)
    & (io_cfg_in_used_procs != 3'h7 | _procs_6_io_init_o);
endmodule

// VCS coverage exclude_file
module ram_2x32(
  input         R0_addr,
  input         R0_en,
  input         R0_clk,
  output [31:0] R0_data,
  input         W0_addr,
  input         W0_en,
  input         W0_clk,
  input  [31:0] W0_data
);

  reg [31:0] Memory[0:1];
  always @(posedge W0_clk) begin
    if (W0_en & 1'h1)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 32'bx;
endmodule

module Queue2_Vec2_UInt16(
  input         clock,
  input         reset,
  output        io_enq_ready,
  input         io_enq_valid,
  input  [15:0] io_enq_bits_0,
  input  [15:0] io_enq_bits_1,
  input         io_deq_ready,
  output        io_deq_valid,
  output [15:0] io_deq_bits_0,
  output [15:0] io_deq_bits_1
);

  wire [31:0] _ram_ext_R0_data;
  reg         wrap;
  reg         wrap_1;
  reg         maybe_full;
  wire        ptr_match = wrap == wrap_1;
  wire        empty = ptr_match & ~maybe_full;
  wire        full = ptr_match & maybe_full;
  wire        do_enq = ~full & io_enq_valid;
  wire        do_deq = io_deq_ready & ~empty;
  always @(posedge clock) begin
    if (reset) begin
      wrap <= 1'h0;
      wrap_1 <= 1'h0;
      maybe_full <= 1'h0;
    end
    else begin
      if (do_enq)
        wrap <= wrap - 1'h1;
      if (do_deq)
        wrap_1 <= wrap_1 - 1'h1;
      if (~(do_enq == do_deq))
        maybe_full <= do_enq;
    end
  end // always @(posedge)
  ram_2x32 ram_ext (
    .R0_addr (wrap_1),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (_ram_ext_R0_data),
    .W0_addr (wrap),
    .W0_en   (do_enq),
    .W0_clk  (clock),
    .W0_data ({io_enq_bits_1, io_enq_bits_0})
  );
  assign io_enq_ready = ~full;
  assign io_deq_valid = ~empty;
  assign io_deq_bits_0 = _ram_ext_R0_data[15:0];
  assign io_deq_bits_1 = _ram_ext_R0_data[31:16];
endmodule

// VCS coverage exclude_file
module ram_0_2x16(
  input         R0_addr,
  input         R0_en,
  input         R0_clk,
  output [15:0] R0_data,
  input         W0_addr,
  input         W0_en,
  input         W0_clk,
  input  [15:0] W0_data
);

  reg [15:0] Memory[0:1];
  always @(posedge W0_clk) begin
    if (W0_en & 1'h1)
      Memory[W0_addr] <= W0_data;
  end // always @(posedge)
  assign R0_data = R0_en ? Memory[R0_addr] : 16'bx;
endmodule

module Queue2_Vec1_UInt16(
  input         clock,
  input         reset,
  output        io_enq_ready,
  input         io_enq_valid,
  input  [15:0] io_enq_bits_0,
  input         io_deq_ready,
  output        io_deq_valid,
  output [15:0] io_deq_bits_0
);

  reg  wrap;
  reg  wrap_1;
  reg  maybe_full;
  wire ptr_match = wrap == wrap_1;
  wire empty = ptr_match & ~maybe_full;
  wire full = ptr_match & maybe_full;
  wire do_enq = ~full & io_enq_valid;
  wire do_deq = io_deq_ready & ~empty;
  always @(posedge clock) begin
    if (reset) begin
      wrap <= 1'h0;
      wrap_1 <= 1'h0;
      maybe_full <= 1'h0;
    end
    else begin
      if (do_enq)
        wrap <= wrap - 1'h1;
      if (do_deq)
        wrap_1 <= wrap_1 - 1'h1;
      if (~(do_enq == do_deq))
        maybe_full <= do_enq;
    end
  end // always @(posedge)
  ram_0_2x16 ram_0_ext (
    .R0_addr (wrap_1),
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R0_data (io_deq_bits_0),
    .W0_addr (wrap),
    .W0_en   (do_enq),
    .W0_clk  (clock),
    .W0_data (io_enq_bits_0)
  );
  assign io_enq_ready = ~full;
  assign io_deq_valid = ~empty;
endmodule

module OpalKellyEmulatorModuleWrapper(
  input         clock,
  input         reset,
  input  [15:0] io_host_steps,
  input  [2:0]  io_used_procs,
  output        io_insns_ready,
  input         io_insns_valid,
  input  [15:0] io_insns_bits_0,
  input  [15:0] io_insns_bits_1,
  output        io_io_i_ready,
  input         io_io_i_valid,
  input  [15:0] io_io_i_bits_0,
  input         io_io_o_ready,
  output        io_io_o_valid,
  output [15:0] io_io_o_bits_0
);

  wire        _io_o_q_io_enq_ready;
  wire        _io_i_q_io_deq_valid;
  wire [15:0] _io_i_q_io_deq_bits_0;
  wire        _insns_q_io_deq_valid;
  wire [15:0] _insns_q_io_deq_bits_0;
  wire [15:0] _insns_q_io_deq_bits_1;
  wire        _module_io_init;
  wire        _module_io_inst_ready;
  wire        _module_io_o_bits_0;
  wire        _module_io_o_bits_1;
  wire        _module_io_o_bits_2;
  wire        _module_io_o_bits_3;
  wire        _module_io_o_bits_4;
  wire        _module_io_o_bits_5;
  wire        _module_io_o_bits_6;
  wire        _module_io_o_bits_7;
  reg         insns_val_prev;
  reg         io_i_prev;
  reg         io_o_prev;
  reg  [2:0]  step;
  wire        _GEN = _io_i_q_io_deq_valid & _io_o_q_io_enq_ready & _module_io_init;
  wire        _GEN_0 = {13'h0, step} == io_host_steps - 16'h1;
  wire        _GEN_1 = _GEN & _GEN_0;
  always @(posedge clock) begin
    insns_val_prev <= io_insns_valid;
    io_i_prev <= io_io_i_valid;
    io_o_prev <= io_io_o_ready;
    if (reset)
      step <= 3'h0;
    else if (_GEN) begin
      if (_GEN_0)
        step <= 3'h0;
      else
        step <= step + 3'h1;
    end
  end // always @(posedge)
  EmulatorModule module_0 (
    .clock                    (clock),
    .reset                    (reset),
    .io_cfg_in_host_steps     (io_host_steps[2:0]),
    .io_cfg_in_used_procs     (io_used_procs),
    .io_run                   (_GEN),
    .io_init                  (_module_io_init),
    .io_inst_ready            (_module_io_inst_ready),
    .io_inst_valid            (_insns_q_io_deq_valid),
    .io_inst_bits_opcode      (_insns_q_io_deq_bits_0[2:0]),
    .io_inst_bits_lut         (_insns_q_io_deq_bits_0[10:3]),
    .io_inst_bits_ops_0_rs    (_insns_q_io_deq_bits_0[13:11]),
    .io_inst_bits_ops_0_local (_insns_q_io_deq_bits_0[14]),
    .io_inst_bits_ops_1_rs    ({_insns_q_io_deq_bits_1[1:0], _insns_q_io_deq_bits_0[15]}),
    .io_inst_bits_ops_1_local (_insns_q_io_deq_bits_1[2]),
    .io_inst_bits_ops_2_rs    (_insns_q_io_deq_bits_1[5:3]),
    .io_inst_bits_ops_2_local (_insns_q_io_deq_bits_1[6]),
    .io_inst_bits_sin         (_insns_q_io_deq_bits_1[9:7]),
    .io_i_bits_0              (_io_i_q_io_deq_bits_0[0]),
    .io_i_bits_1              (_io_i_q_io_deq_bits_0[1]),
    .io_i_bits_2              (_io_i_q_io_deq_bits_0[2]),
    .io_i_bits_3              (_io_i_q_io_deq_bits_0[3]),
    .io_i_bits_4              (_io_i_q_io_deq_bits_0[4]),
    .io_i_bits_5              (_io_i_q_io_deq_bits_0[5]),
    .io_i_bits_6              (_io_i_q_io_deq_bits_0[6]),
    .io_i_bits_7              (_io_i_q_io_deq_bits_0[7]),
    .io_o_bits_0              (_module_io_o_bits_0),
    .io_o_bits_1              (_module_io_o_bits_1),
    .io_o_bits_2              (_module_io_o_bits_2),
    .io_o_bits_3              (_module_io_o_bits_3),
    .io_o_bits_4              (_module_io_o_bits_4),
    .io_o_bits_5              (_module_io_o_bits_5),
    .io_o_bits_6              (_module_io_o_bits_6),
    .io_o_bits_7              (_module_io_o_bits_7),
    .io_dbg_0_ldm             (/* unused */),
    .io_dbg_0_sdm             (/* unused */),
    .io_dbg_0_ops_0           (/* unused */),
    .io_dbg_0_ops_1           (/* unused */),
    .io_dbg_0_ops_2           (/* unused */),
    .io_dbg_1_ldm             (/* unused */),
    .io_dbg_1_sdm             (/* unused */),
    .io_dbg_1_ops_0           (/* unused */),
    .io_dbg_1_ops_1           (/* unused */),
    .io_dbg_1_ops_2           (/* unused */),
    .io_dbg_2_ldm             (/* unused */),
    .io_dbg_2_sdm             (/* unused */),
    .io_dbg_2_ops_0           (/* unused */),
    .io_dbg_2_ops_1           (/* unused */),
    .io_dbg_2_ops_2           (/* unused */),
    .io_dbg_3_ldm             (/* unused */),
    .io_dbg_3_sdm             (/* unused */),
    .io_dbg_3_ops_0           (/* unused */),
    .io_dbg_3_ops_1           (/* unused */),
    .io_dbg_3_ops_2           (/* unused */),
    .io_dbg_4_ldm             (/* unused */),
    .io_dbg_4_sdm             (/* unused */),
    .io_dbg_4_ops_0           (/* unused */),
    .io_dbg_4_ops_1           (/* unused */),
    .io_dbg_4_ops_2           (/* unused */),
    .io_dbg_5_ldm             (/* unused */),
    .io_dbg_5_sdm             (/* unused */),
    .io_dbg_5_ops_0           (/* unused */),
    .io_dbg_5_ops_1           (/* unused */),
    .io_dbg_5_ops_2           (/* unused */),
    .io_dbg_6_ldm             (/* unused */),
    .io_dbg_6_sdm             (/* unused */),
    .io_dbg_6_ops_0           (/* unused */),
    .io_dbg_6_ops_1           (/* unused */),
    .io_dbg_6_ops_2           (/* unused */),
    .io_dbg_7_ldm             (/* unused */),
    .io_dbg_7_sdm             (/* unused */),
    .io_dbg_7_ops_0           (/* unused */),
    .io_dbg_7_ops_1           (/* unused */),
    .io_dbg_7_ops_2           (/* unused */)
  );
  Queue2_Vec2_UInt16 insns_q (
    .clock         (clock),
    .reset         (reset),
    .io_enq_ready  (io_insns_ready),
    .io_enq_valid  (~insns_val_prev & io_insns_valid),
    .io_enq_bits_0 (io_insns_bits_0),
    .io_enq_bits_1 (io_insns_bits_1),
    .io_deq_ready  (_module_io_inst_ready),
    .io_deq_valid  (_insns_q_io_deq_valid),
    .io_deq_bits_0 (_insns_q_io_deq_bits_0),
    .io_deq_bits_1 (_insns_q_io_deq_bits_1)
  );
  Queue2_Vec1_UInt16 io_i_q (
    .clock         (clock),
    .reset         (reset),
    .io_enq_ready  (io_io_i_ready),
    .io_enq_valid  (~io_i_prev & io_io_i_valid),
    .io_enq_bits_0 (io_io_i_bits_0),
    .io_deq_ready  (_GEN_1),
    .io_deq_valid  (_io_i_q_io_deq_valid),
    .io_deq_bits_0 (_io_i_q_io_deq_bits_0)
  );
  Queue2_Vec1_UInt16 io_o_q (
    .clock         (clock),
    .reset         (reset),
    .io_enq_ready  (_io_o_q_io_enq_ready),
    .io_enq_valid  (_GEN_1),
    .io_enq_bits_0
      ({8'h0,
        _module_io_o_bits_7,
        _module_io_o_bits_6,
        _module_io_o_bits_5,
        _module_io_o_bits_4,
        _module_io_o_bits_3,
        _module_io_o_bits_2,
        _module_io_o_bits_1,
        _module_io_o_bits_0}),
    .io_deq_ready  (~io_o_prev & io_io_o_ready),
    .io_deq_valid  (io_io_o_valid),
    .io_deq_bits_0 (io_io_o_bits_0)
  );
endmodule

module OpalKellyFPGATop(
  input         clock,
  input         reset,
  input         io_host_clock,
  input  [15:0] io_host_host_steps,
  input  [2:0]  io_host_used_procs,
  output        io_host_insns_ready,
  input         io_host_insns_valid,
  input  [15:0] io_host_insns_bits_0,
  input  [15:0] io_host_insns_bits_1,
  output        io_host_io_i_ready,
  input         io_host_io_i_valid,
  input  [15:0] io_host_io_i_bits_0,
  input         io_host_io_o_ready,
  output        io_host_io_o_valid,
  output [15:0] io_host_io_o_bits_0
);

  wire        _emulation_module_wrapper_io_insns_ready;
  wire        _emulation_module_wrapper_io_io_i_ready;
  wire        _emulation_module_wrapper_io_io_o_valid;
  wire [15:0] _emulation_module_wrapper_io_io_o_bits_0;
  wire [15:0] _clock_crossing_io_fpga_host_steps;
  wire [2:0]  _clock_crossing_io_fpga_used_procs;
  wire        _clock_crossing_io_fpga_insns_valid;
  wire [15:0] _clock_crossing_io_fpga_insns_bits_0;
  wire [15:0] _clock_crossing_io_fpga_insns_bits_1;
  wire        _clock_crossing_io_fpga_io_i_valid;
  wire [15:0] _clock_crossing_io_fpga_io_i_bits_0;
  wire        _clock_crossing_io_fpga_io_o_ready;
  OpalKellyClockCrossingModule clock_crossing (
    .clock                (clock),
    .reset                (reset),
    .io_host_clock        (io_host_clock),
    .io_host_host_steps   (io_host_host_steps),
    .io_host_used_procs   (io_host_used_procs),
    .io_host_insns_ready  (io_host_insns_ready),
    .io_host_insns_valid  (io_host_insns_valid),
    .io_host_insns_bits_0 (io_host_insns_bits_0),
    .io_host_insns_bits_1 (io_host_insns_bits_1),
    .io_host_io_i_ready   (io_host_io_i_ready),
    .io_host_io_i_valid   (io_host_io_i_valid),
    .io_host_io_i_bits_0  (io_host_io_i_bits_0),
    .io_host_io_o_ready   (io_host_io_o_ready),
    .io_host_io_o_valid   (io_host_io_o_valid),
    .io_host_io_o_bits_0  (io_host_io_o_bits_0),
    .io_fpga_host_steps   (_clock_crossing_io_fpga_host_steps),
    .io_fpga_used_procs   (_clock_crossing_io_fpga_used_procs),
    .io_fpga_insns_ready  (_emulation_module_wrapper_io_insns_ready),
    .io_fpga_insns_valid  (_clock_crossing_io_fpga_insns_valid),
    .io_fpga_insns_bits_0 (_clock_crossing_io_fpga_insns_bits_0),
    .io_fpga_insns_bits_1 (_clock_crossing_io_fpga_insns_bits_1),
    .io_fpga_io_i_ready   (_emulation_module_wrapper_io_io_i_ready),
    .io_fpga_io_i_valid   (_clock_crossing_io_fpga_io_i_valid),
    .io_fpga_io_i_bits_0  (_clock_crossing_io_fpga_io_i_bits_0),
    .io_fpga_io_o_ready   (_clock_crossing_io_fpga_io_o_ready),
    .io_fpga_io_o_valid   (_emulation_module_wrapper_io_io_o_valid),
    .io_fpga_io_o_bits_0  (_emulation_module_wrapper_io_io_o_bits_0)
  );
  OpalKellyEmulatorModuleWrapper emulation_module_wrapper (
    .clock           (clock),
    .reset           (reset),
    .io_host_steps   (_clock_crossing_io_fpga_host_steps),
    .io_used_procs   (_clock_crossing_io_fpga_used_procs),
    .io_insns_ready  (_emulation_module_wrapper_io_insns_ready),
    .io_insns_valid  (_clock_crossing_io_fpga_insns_valid),
    .io_insns_bits_0 (_clock_crossing_io_fpga_insns_bits_0),
    .io_insns_bits_1 (_clock_crossing_io_fpga_insns_bits_1),
    .io_io_i_ready   (_emulation_module_wrapper_io_io_i_ready),
    .io_io_i_valid   (_clock_crossing_io_fpga_io_i_valid),
    .io_io_i_bits_0  (_clock_crossing_io_fpga_io_i_bits_0),
    .io_io_o_ready   (_clock_crossing_io_fpga_io_o_ready),
    .io_io_o_valid   (_emulation_module_wrapper_io_io_o_valid),
    .io_io_o_bits_0  (_emulation_module_wrapper_io_io_o_bits_0)
  );
endmodule

