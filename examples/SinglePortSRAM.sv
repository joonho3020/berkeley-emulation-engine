// Generated by CIRCT firtool-1.62.0
// VCS coverage exclude_file
module mem_8x8(
  input  [2:0] RW0_addr,
  input        RW0_en,
  input        RW0_clk,
  input        RW0_wmode,
  input  [7:0] RW0_wdata,
  output [7:0] RW0_rdata,
  input  [3:0] RW0_wmask
);

  reg [7:0] Memory[0:7];
  reg [2:0] _RW0_raddr_d0;
  reg       _RW0_ren_d0;
  reg       _RW0_rmode_d0;
  always @(posedge RW0_clk) begin
    _RW0_raddr_d0 <= RW0_addr;
    _RW0_ren_d0 <= RW0_en;
    _RW0_rmode_d0 <= RW0_wmode;
    if (RW0_en & RW0_wmask[0] & RW0_wmode)
      Memory[RW0_addr][32'h0 +: 2] <= RW0_wdata[1:0];
    if (RW0_en & RW0_wmask[1] & RW0_wmode)
      Memory[RW0_addr][32'h2 +: 2] <= RW0_wdata[3:2];
    if (RW0_en & RW0_wmask[2] & RW0_wmode)
      Memory[RW0_addr][32'h4 +: 2] <= RW0_wdata[5:4];
    if (RW0_en & RW0_wmask[3] & RW0_wmode)
      Memory[RW0_addr][32'h6 +: 2] <= RW0_wdata[7:6];
  end // always @(posedge)
  assign RW0_rdata = _RW0_ren_d0 & ~_RW0_rmode_d0 ? Memory[_RW0_raddr_d0] : 8'bx;
endmodule

module SinglePortSRAM(
  input        clock,
  input        reset,
  input  [2:0] io_raddr,
  output [1:0] io_rdata_0,
  output [1:0] io_rdata_1,
  output [1:0] io_rdata_2,
  output [1:0] io_rdata_3,
  input        io_wen,
  input  [2:0] io_waddr,
  input  [1:0] io_wdata_0,
  input  [1:0] io_wdata_1,
  input  [1:0] io_wdata_2,
  input  [1:0] io_wdata_3,
  input        io_wmask_0,
  input        io_wmask_1,
  input        io_wmask_2,
  input        io_wmask_3
);

  wire [7:0] _mem_ext_RW0_rdata;
  mem_8x8 mem_ext (
    .RW0_addr  (io_wen ? io_waddr : io_raddr),
    .RW0_en    (1'h1),
    .RW0_clk   (clock),
    .RW0_wmode (io_wen),
    .RW0_wdata ({io_wdata_3, io_wdata_2, io_wdata_1, io_wdata_0}),
    .RW0_rdata (_mem_ext_RW0_rdata),
    .RW0_wmask ({io_wmask_3, io_wmask_2, io_wmask_1, io_wmask_0})
  );
  assign io_rdata_0 = _mem_ext_RW0_rdata[1:0];
  assign io_rdata_1 = _mem_ext_RW0_rdata[3:2];
  assign io_rdata_2 = _mem_ext_RW0_rdata[5:4];
  assign io_rdata_3 = _mem_ext_RW0_rdata[7:6];
endmodule

